services:
    frontend:
        build:
            context: ./frontend
            dockerfile: ./docker/Dockerfile.prod
        container_name: frontend-container-prod
        restart: unless-stopped
        # ports:
        #     - 8080:80
        env_file:
            - ./frontend/.env
        networks:
            - restaurant_network
        depends_on:
            - backend

    backend:
        build:
            context: ./backend
            dockerfile: ./docker/Dockerfile.prod
        container_name: backend-container-prod
        ports:
            - 3000:3000
        restart: unless-stopped
        env_file:
            - ./backend/.env.production
        networks:
            - restaurant_network
    nginx:
        container_name: nginx_proxy
        build:
            context: ./proxy
            dockerfile: Dockerfile
        ports:
            - 8080:80
        depends_on:
            - frontend
            - backend
        volumes:
            - ./proxy/nginx.conf:/etc/nginx/nginx.conf
        restart: always
        networks:
            - restaurant_network

networks:
  restaurant_network:
    driver: bridge
